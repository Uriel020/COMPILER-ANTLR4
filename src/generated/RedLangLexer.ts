// Generated from ./src/config/RedLang.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import type { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import type { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class RedLangLexer extends Lexer {
	public static readonly DECLARE = 1;
	public static readonly SET = 2;
	public static readonly CHECK = 3;
	public static readonly OTHERWISE = 4;
	public static readonly REPEAT = 5;
	public static readonly LOOP = 6;
	public static readonly FUNC = 7;
	public static readonly GIVE = 8;
	public static readonly SHOW = 9;
	public static readonly ASK = 10;
	public static readonly TRUE = 11;
	public static readonly FALSE = 12;
	public static readonly NULL = 13;
	public static readonly TYPE_INT = 14;
	public static readonly TYPE_FLOAT = 15;
	public static readonly TYPE_STRING = 16;
	public static readonly TYPE_BOOL = 17;
	public static readonly OR = 18;
	public static readonly AND = 19;
	public static readonly NOT = 20;
	public static readonly LPAREN = 21;
	public static readonly RPAREN = 22;
	public static readonly LBRACE = 23;
	public static readonly RBRACE = 24;
	public static readonly LBRACK = 25;
	public static readonly RBRACK = 26;
	public static readonly COMMA = 27;
	public static readonly COLON = 28;
	public static readonly SEMI = 29;
	public static readonly QUESTION = 30;
	public static readonly EQUAL = 31;
	public static readonly EQ = 32;
	public static readonly NEQ = 33;
	public static readonly GT = 34;
	public static readonly LT = 35;
	public static readonly GE = 36;
	public static readonly LE = 37;
	public static readonly ADD = 38;
	public static readonly SUB = 39;
	public static readonly MUL = 40;
	public static readonly DIV = 41;
	public static readonly MOD = 42;
	public static readonly INT_LIT = 43;
	public static readonly FLOAT_LIT = 44;
	public static readonly STRING_LIT = 45;
	public static readonly IDENT = 46;
	public static readonly WS = 47;
	public static readonly LINE_COMMENT = 48;
	public static readonly COMMENT = 49;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"DECLARE", "SET", "CHECK", "OTHERWISE", "REPEAT", "LOOP", "FUNC", "GIVE", 
		"SHOW", "ASK", "TRUE", "FALSE", "NULL", "TYPE_INT", "TYPE_FLOAT", "TYPE_STRING", 
		"TYPE_BOOL", "OR", "AND", "NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
		"LBRACK", "RBRACK", "COMMA", "COLON", "SEMI", "QUESTION", "EQUAL", "EQ", 
		"NEQ", "GT", "LT", "GE", "LE", "ADD", "SUB", "MUL", "DIV", "MOD", "INT_LIT", 
		"FLOAT_LIT", "STRING_LIT", "IDENT", "ESC", "DIGIT", "LETTER", "WS", "LINE_COMMENT", 
		"COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'declare'", "'set'", "'check'", "'otherwise'", "'repeat'", 
		"'loop'", "'func'", "'give'", "'show'", "'ask'", "'true'", "'false'", 
		"'null'", "'i'", "'f'", "'s'", "'b'", "'or'", "'and'", "'not'", "'('", 
		"')'", "'{'", "'}'", "'['", "']'", "','", "':'", "';'", "'?'", "'='", 
		"'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'*'", "'/'", 
		"'%'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "DECLARE", "SET", "CHECK", "OTHERWISE", "REPEAT", "LOOP", "FUNC", 
		"GIVE", "SHOW", "ASK", "TRUE", "FALSE", "NULL", "TYPE_INT", "TYPE_FLOAT", 
		"TYPE_STRING", "TYPE_BOOL", "OR", "AND", "NOT", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "LBRACK", "RBRACK", "COMMA", "COLON", "SEMI", "QUESTION", "EQUAL", 
		"EQ", "NEQ", "GT", "LT", "GE", "LE", "ADD", "SUB", "MUL", "DIV", "MOD", 
		"INT_LIT", "FLOAT_LIT", "STRING_LIT", "IDENT", "WS", "LINE_COMMENT", "COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(RedLangLexer._LITERAL_NAMES, RedLangLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return RedLangLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(RedLangLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "RedLang.g4"; }

	// @Override
	public get ruleNames(): string[] { return RedLangLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return RedLangLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return RedLangLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return RedLangLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x023\u0143\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03" +
		"\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03" +
		"\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F" +
		"\x03 \x03 \x03!\x03!\x03!\x03\"\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03" +
		"%\x03%\x03&\x03&\x03&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03" +
		"+\x03,\x06,\xFB\n,\r,\x0E,\xFC\x03-\x06-\u0100\n-\r-\x0E-\u0101\x03-\x03" +
		"-\x06-\u0106\n-\r-\x0E-\u0107\x03.\x03.\x03.\x07.\u010D\n.\f.\x0E.\u0110" +
		"\v.\x03.\x03.\x03/\x03/\x03/\x03/\x07/\u0118\n/\f/\x0E/\u011B\v/\x030" +
		"\x030\x030\x031\x031\x032\x032\x033\x063\u0125\n3\r3\x0E3\u0126\x033\x03" +
		"3\x034\x034\x034\x034\x074\u012F\n4\f4\x0E4\u0132\v4\x034\x034\x035\x03" +
		"5\x035\x035\x075\u013A\n5\f5\x0E5\u013D\v5\x035\x035\x035\x035\x035\x03" +
		"\u013B\x02\x026\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02" +
		"\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02" +
		"\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x02\x02a\x02" +
		"\x02c\x02\x02e\x021g\x022i\x023\x03\x02\b\x06\x02\f\f\x0F\x0F$$^^\t\x02" +
		"$$^^ddhhppttvv\x03\x022;\x04\x02C\\c|\x05\x02\v\f\x0F\x0F\"\"\x04\x02" +
		"\f\f\x0F\x0F\x02\u014A\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03" +
		"\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x02" +
		"3\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02" +
		"\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02" +
		"\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03" +
		"\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02" +
		"\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02" +
		"U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02" +
		"\x02\x02\x02]\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02" +
		"\x02i\x03\x02\x02\x02\x03k\x03\x02\x02\x02\x05s\x03\x02\x02\x02\x07w\x03" +
		"\x02\x02\x02\t}\x03\x02\x02\x02\v\x87\x03\x02\x02\x02\r\x8E\x03\x02\x02" +
		"\x02\x0F\x93\x03\x02\x02\x02\x11\x98\x03\x02\x02\x02\x13\x9D\x03\x02\x02" +
		"\x02\x15\xA2\x03\x02\x02\x02\x17\xA6\x03\x02\x02\x02\x19\xAB\x03\x02\x02" +
		"\x02\x1B\xB1\x03\x02\x02\x02\x1D\xB6\x03\x02\x02\x02\x1F\xB8\x03\x02\x02" +
		"\x02!\xBA\x03\x02\x02\x02#\xBC\x03\x02\x02\x02%\xBE\x03\x02\x02\x02\'" +
		"\xC1\x03\x02\x02\x02)\xC5\x03\x02\x02\x02+\xC9\x03\x02\x02\x02-\xCB\x03" +
		"\x02\x02\x02/\xCD\x03\x02\x02\x021\xCF\x03\x02\x02\x023\xD1\x03\x02\x02" +
		"\x025\xD3\x03\x02\x02\x027\xD5\x03\x02\x02\x029\xD7\x03\x02\x02\x02;\xD9" +
		"\x03\x02\x02\x02=\xDB\x03\x02\x02\x02?\xDD\x03\x02\x02\x02A\xDF\x03\x02" +
		"\x02\x02C\xE2\x03\x02\x02\x02E\xE5\x03\x02\x02\x02G\xE7\x03\x02\x02\x02" +
		"I\xE9\x03\x02\x02\x02K\xEC\x03\x02\x02\x02M\xEF\x03\x02\x02\x02O\xF1\x03" +
		"\x02\x02\x02Q\xF3\x03\x02\x02\x02S\xF5\x03\x02\x02\x02U\xF7\x03\x02\x02" +
		"\x02W\xFA\x03\x02\x02\x02Y\xFF\x03\x02\x02\x02[\u0109\x03\x02\x02\x02" +
		"]\u0113\x03\x02\x02\x02_\u011C\x03\x02\x02\x02a\u011F\x03\x02\x02\x02" +
		"c\u0121\x03\x02\x02\x02e\u0124\x03\x02\x02\x02g\u012A\x03\x02\x02\x02" +
		"i\u0135\x03\x02\x02\x02kl\x07f\x02\x02lm\x07g\x02\x02mn\x07e\x02\x02n" +
		"o\x07n\x02\x02op\x07c\x02\x02pq\x07t\x02\x02qr\x07g\x02\x02r\x04\x03\x02" +
		"\x02\x02st\x07u\x02\x02tu\x07g\x02\x02uv\x07v\x02\x02v\x06\x03\x02\x02" +
		"\x02wx\x07e\x02\x02xy\x07j\x02\x02yz\x07g\x02\x02z{\x07e\x02\x02{|\x07" +
		"m\x02\x02|\b\x03\x02\x02\x02}~\x07q\x02\x02~\x7F\x07v\x02\x02\x7F\x80" +
		"\x07j\x02\x02\x80\x81\x07g\x02\x02\x81\x82\x07t\x02\x02\x82\x83\x07y\x02" +
		"\x02\x83\x84\x07k\x02\x02\x84\x85\x07u\x02\x02\x85\x86\x07g\x02\x02\x86" +
		"\n\x03\x02\x02\x02\x87\x88\x07t\x02\x02\x88\x89\x07g\x02\x02\x89\x8A\x07" +
		"r\x02\x02\x8A\x8B\x07g\x02\x02\x8B\x8C\x07c\x02\x02\x8C\x8D\x07v\x02\x02" +
		"\x8D\f\x03\x02\x02\x02\x8E\x8F\x07n\x02\x02\x8F\x90\x07q\x02\x02\x90\x91" +
		"\x07q\x02\x02\x91\x92\x07r\x02\x02\x92\x0E\x03\x02\x02\x02\x93\x94\x07" +
		"h\x02\x02\x94\x95\x07w\x02\x02\x95\x96\x07p\x02\x02\x96\x97\x07e\x02\x02" +
		"\x97\x10\x03\x02\x02\x02\x98\x99\x07i\x02\x02\x99\x9A\x07k\x02\x02\x9A" +
		"\x9B\x07x\x02\x02\x9B\x9C\x07g\x02\x02\x9C\x12\x03\x02\x02\x02\x9D\x9E" +
		"\x07u\x02\x02\x9E\x9F\x07j\x02\x02\x9F\xA0\x07q\x02\x02\xA0\xA1\x07y\x02" +
		"\x02\xA1\x14\x03\x02\x02\x02\xA2\xA3\x07c\x02\x02\xA3\xA4\x07u\x02\x02" +
		"\xA4\xA5\x07m\x02\x02\xA5\x16\x03\x02\x02\x02\xA6\xA7\x07v\x02\x02\xA7" +
		"\xA8\x07t\x02\x02\xA8\xA9\x07w\x02\x02\xA9\xAA\x07g\x02\x02\xAA\x18\x03" +
		"\x02\x02\x02\xAB\xAC\x07h\x02\x02\xAC\xAD\x07c\x02\x02\xAD\xAE\x07n\x02" +
		"\x02\xAE\xAF\x07u\x02\x02\xAF\xB0\x07g\x02\x02\xB0\x1A\x03\x02\x02\x02" +
		"\xB1\xB2\x07p\x02\x02\xB2\xB3\x07w\x02\x02\xB3\xB4\x07n\x02\x02\xB4\xB5" +
		"\x07n\x02\x02\xB5\x1C\x03\x02\x02\x02\xB6\xB7\x07k\x02\x02\xB7\x1E\x03" +
		"\x02\x02\x02\xB8\xB9\x07h\x02\x02\xB9 \x03\x02\x02\x02\xBA\xBB\x07u\x02" +
		"\x02\xBB\"\x03\x02\x02\x02\xBC\xBD\x07d\x02\x02\xBD$\x03\x02\x02\x02\xBE" +
		"\xBF\x07q\x02\x02\xBF\xC0\x07t\x02\x02\xC0&\x03\x02\x02\x02\xC1\xC2\x07" +
		"c\x02\x02\xC2\xC3\x07p\x02\x02\xC3\xC4\x07f\x02\x02\xC4(\x03\x02\x02\x02" +
		"\xC5\xC6\x07p\x02\x02\xC6\xC7\x07q\x02\x02\xC7\xC8\x07v\x02\x02\xC8*\x03" +
		"\x02\x02\x02\xC9\xCA\x07*\x02\x02\xCA,\x03\x02\x02\x02\xCB\xCC\x07+\x02" +
		"\x02\xCC.\x03\x02\x02\x02\xCD\xCE\x07}\x02\x02\xCE0\x03\x02\x02\x02\xCF" +
		"\xD0\x07\x7F\x02\x02\xD02\x03\x02\x02\x02\xD1\xD2\x07]\x02\x02\xD24\x03" +
		"\x02\x02\x02\xD3\xD4\x07_\x02\x02\xD46\x03\x02\x02\x02\xD5\xD6\x07.\x02" +
		"\x02\xD68\x03\x02\x02\x02\xD7\xD8\x07<\x02\x02\xD8:\x03\x02\x02\x02\xD9" +
		"\xDA\x07=\x02\x02\xDA<\x03\x02\x02\x02\xDB\xDC\x07A\x02\x02\xDC>\x03\x02" +
		"\x02\x02\xDD\xDE\x07?\x02\x02\xDE@\x03\x02\x02\x02\xDF\xE0\x07?\x02\x02" +
		"\xE0\xE1\x07?\x02\x02\xE1B\x03\x02\x02\x02\xE2\xE3\x07#\x02\x02\xE3\xE4" +
		"\x07?\x02\x02\xE4D\x03\x02\x02\x02\xE5\xE6\x07@\x02\x02\xE6F\x03\x02\x02" +
		"\x02\xE7\xE8\x07>\x02\x02\xE8H\x03\x02\x02\x02\xE9\xEA\x07@\x02\x02\xEA" +
		"\xEB\x07?\x02\x02\xEBJ\x03\x02\x02\x02\xEC\xED\x07>\x02\x02\xED\xEE\x07" +
		"?\x02\x02\xEEL\x03\x02\x02\x02\xEF\xF0\x07-\x02\x02\xF0N\x03\x02\x02\x02" +
		"\xF1\xF2\x07/\x02\x02\xF2P\x03\x02\x02\x02\xF3\xF4\x07,\x02\x02\xF4R\x03" +
		"\x02\x02\x02\xF5\xF6\x071\x02\x02\xF6T\x03\x02\x02\x02\xF7\xF8\x07\'\x02" +
		"\x02\xF8V\x03\x02\x02\x02\xF9\xFB\x05a1\x02\xFA\xF9\x03\x02\x02\x02\xFB" +
		"\xFC\x03\x02\x02\x02\xFC\xFA\x03\x02\x02\x02\xFC\xFD\x03\x02\x02\x02\xFD" +
		"X\x03\x02\x02\x02\xFE\u0100\x05a1\x02\xFF\xFE\x03\x02\x02\x02\u0100\u0101" +
		"\x03\x02\x02\x02\u0101\xFF\x03\x02\x02\x02\u0101\u0102\x03\x02\x02\x02" +
		"\u0102\u0103\x03\x02\x02\x02\u0103\u0105\x070\x02\x02\u0104\u0106\x05" +
		"a1\x02\u0105\u0104\x03\x02\x02\x02\u0106\u0107\x03\x02\x02\x02\u0107\u0105" +
		"\x03\x02\x02\x02\u0107\u0108\x03\x02\x02\x02\u0108Z\x03\x02\x02\x02\u0109" +
		"\u010E\x07$\x02\x02\u010A\u010D\n\x02\x02\x02\u010B\u010D\x05_0\x02\u010C" +
		"\u010A\x03\x02\x02\x02\u010C\u010B\x03\x02\x02\x02\u010D\u0110\x03\x02" +
		"\x02\x02\u010E\u010C\x03\x02\x02\x02\u010E\u010F\x03\x02\x02\x02\u010F" +
		"\u0111\x03\x02\x02\x02\u0110\u010E\x03\x02\x02\x02\u0111\u0112\x07$\x02" +
		"\x02\u0112\\\x03\x02\x02\x02\u0113\u0119\x05c2\x02\u0114\u0118\x05c2\x02" +
		"\u0115\u0118\x05a1\x02\u0116\u0118\x07a\x02\x02\u0117\u0114\x03\x02\x02" +
		"\x02\u0117\u0115\x03\x02\x02\x02\u0117\u0116\x03\x02\x02\x02\u0118\u011B" +
		"\x03\x02\x02\x02\u0119\u0117\x03\x02\x02\x02\u0119\u011A\x03\x02\x02\x02" +
		"\u011A^\x03\x02\x02\x02\u011B\u0119\x03\x02\x02\x02\u011C\u011D\x07^\x02" +
		"\x02\u011D\u011E\t\x03\x02\x02\u011E`\x03\x02\x02\x02\u011F\u0120\t\x04" +
		"\x02\x02\u0120b\x03\x02\x02\x02\u0121\u0122\t\x05\x02\x02\u0122d\x03\x02" +
		"\x02\x02\u0123\u0125\t\x06\x02\x02\u0124\u0123\x03\x02\x02\x02\u0125\u0126" +
		"\x03\x02\x02\x02\u0126\u0124\x03\x02\x02\x02\u0126\u0127\x03\x02\x02\x02" +
		"\u0127\u0128\x03\x02\x02\x02\u0128\u0129\b3\x02\x02\u0129f\x03\x02\x02" +
		"\x02\u012A\u012B\x071\x02\x02\u012B\u012C\x071\x02\x02\u012C\u0130\x03" +
		"\x02\x02\x02\u012D\u012F\n\x07\x02\x02\u012E\u012D\x03\x02\x02\x02\u012F" +
		"\u0132\x03\x02\x02\x02\u0130\u012E\x03\x02\x02\x02\u0130\u0131\x03\x02" +
		"\x02\x02\u0131\u0133\x03\x02\x02\x02\u0132\u0130\x03\x02\x02\x02\u0133" +
		"\u0134\b4\x02\x02\u0134h\x03\x02\x02\x02\u0135\u0136\x071\x02\x02\u0136" +
		"\u0137\x07,\x02\x02\u0137\u013B\x03\x02\x02\x02\u0138\u013A\v\x02\x02" +
		"\x02\u0139\u0138\x03\x02\x02\x02\u013A\u013D\x03\x02\x02\x02\u013B\u013C" +
		"\x03\x02\x02\x02\u013B\u0139\x03\x02\x02\x02\u013C\u013E\x03\x02\x02\x02" +
		"\u013D\u013B\x03\x02\x02\x02\u013E\u013F\x07,\x02\x02\u013F\u0140\x07" +
		"1\x02\x02\u0140\u0141\x03\x02\x02\x02\u0141\u0142\b5\x02\x02\u0142j\x03" +
		"\x02\x02\x02\r\x02\xFC\u0101\u0107\u010C\u010E\u0117\u0119\u0126\u0130" +
		"\u013B\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!RedLangLexer.__ATN) {
			RedLangLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(RedLangLexer._serializedATN));
		}

		return RedLangLexer.__ATN;
	}

}

